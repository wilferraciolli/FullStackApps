.org-chart-container {
  @apply p-6 bg-gray-50 min-h-screen;

  .org-tree-card {
    @apply bg-white rounded-lg shadow-md p-6 max-w-6xl mx-auto;
    transition: all 0.3s ease;
    
    &:hover {
      @apply shadow-lg;
    }
  }

  .title {
    @apply text-3xl font-bold mb-8 text-center text-gray-800;
    position: relative;
    
    &:after {
      content: '';
      position: absolute;
      width: 60px;
      height: 3px;
      @apply bg-blue-600;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  mat-tree {
    @apply bg-transparent;
  }
}

// Loading and error states
.loading-container, .error-container {
  @apply flex flex-col items-center justify-center p-8 text-center;

  p {
    @apply my-4 text-gray-600;
  }
}

.loading-container {
  mat-spinner {
    @apply mb-2;
  }
}

.error-container {
  mat-icon {
    @apply text-4xl text-red-600 mb-2;
  }

  button {
    @apply mt-4 transition-all;
    
    &:hover {
      @apply shadow-md;
    }
  }
}

.node-content {
  @apply flex items-center gap-4 py-2 px-1 rounded-md transition-all;
  
  &:hover {
    @apply bg-gray-50;
  }

  .node-icon {
    @apply text-2xl transition-transform;
    
    &:hover {
      transform: scale(1.1);
    }
  }

  .node-info {
    @apply flex flex-col;

    .node-name {
      @apply font-medium text-gray-900;
    }

    .node-details {
      @apply flex items-center gap-3 mt-1 flex-wrap;

      .employee-name {
        @apply text-sm text-gray-700 font-medium;
      }

      .position {
        @apply text-sm text-gray-500 italic;
      }
    }
  }
}

// Node type styles
.node-org {
  .node-icon {
    @apply text-blue-600;
  }
  .node-name {
    @apply text-lg text-blue-800 font-semibold;
  }
}

.node-department {
  .node-icon {
    @apply text-green-600;
  }
  .node-name {
    @apply text-green-800;
  }
}

.node-job {
  .node-icon {
    &.occupied {
      @apply text-purple-600;
    }
    &.vacant {
      @apply text-gray-400;
    }
  }
  
  .node-name {
    @apply text-gray-800;
  }
}

// Tree structure styles
.mat-tree-node {
  min-height: 54px;
  @apply transition-all;
}

.nested-node {
  @apply overflow-hidden transition-all;

  &.expanded {
    @apply border-l-2 border-gray-200 ml-10 pl-2;
  }
}

.toggle-btn {
  @apply text-gray-500 transition-all;

  &:hover {
    @apply bg-gray-100 text-gray-800;
    transform: rotate(5deg);
  }
}

// Material overrides
::ng-deep {
  .mat-mdc-card {
    @apply overflow-visible;
  }
  
  .mat-tree {
    @apply bg-transparent;
  }

  .mat-tree-node {
    min-height: 54px;
  }

  .mat-mdc-chip {
    @apply font-medium text-xs;
    
    &.vacant {
      @apply bg-red-100 text-red-700;
    }
    &.occupied {
      @apply bg-green-100 text-green-700;
    }
  }
  
  .mat-icon-button {
    @apply transition-all;
    
    &:hover {
      @apply bg-gray-100;
    }
  }
  
  // Animation for expanding/collapsing nodes
  .mat-nested-tree-node {
    overflow: hidden;
    transition: all 0.3s ease-in-out;
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .org-chart-container {
    @apply p-3;
    
    .org-tree-card {
      @apply p-3;
    }
    
    .title {
      @apply text-2xl mb-4;
    }
  }
  
  .node-content {
    @apply gap-2;
    
    .node-icon {
      @apply text-xl;
    }
    
    .node-info {
      .node-name {
        @apply text-base;
      }
      
      .node-details {
        @apply flex-col items-start gap-1;
      }
    }
  }
}
